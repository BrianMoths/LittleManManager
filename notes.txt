This is supposed to be a simple program which gives a simple model of how a cpu 
works. This game is inspired by the little man architecture. The game is supposed to be a implementation of an architecture similar to the little man architecture in an office setting. The player is given specifications what the little man must do (a program), and the player must produce a sequence of instructions that get the little man to do that action. 

Many important features of a cpu will not be included in this minimal 
model. Features not included in this version could be included in a future more 
sophisticated version.

scope first iteration:
  what is covered: 
    basic instruction cycle: fetch, decode, do operation...
    instruction pointer
    von neumann achitecture
    basic instructions
    control structures involving jmp
    
    
  what is not covered:
    binary
    flag register
    multiple registers
    different word sizes: memory address resolution, instruction sizes, register size
    cache
    pipeline
    segmentation
    indexed addressing
    string instructions
    syscalls
    stack
    interrupts
    
art should look like boxhead? see art. Little man may look like megabus guy

name - little man manager

need to add three call instructions.
add signed i/o, worksheet to worksheet binary operations, think about xor definition
eventually need graphics, menu with mission selector, unlockable/upgradable assembler?, saving, auto-updater, sound?, intro cutscene, story.

